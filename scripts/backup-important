#!/bin/bash

mnt="/mnt/nextcloud"
dir="${mnt}/backup"
targets=(
    "notes"
    "Desktop/important-docs"
    ".keepass/passwords.kdbx"
)

# Mount Nextcloud drive
if ! mount | grep ${mnt} &> /dev/null; then
    echo "[*] Mounting nextcloud drive"
    rclone mount nextcloud: ${mnt} \
        --vfs-cache-mode full \
        --vfs-cache-max-age 1h \
        --vfs-cache-max-size 1G \
        --buffer-size 16M \
        --dir-cache-time 72h \
        --umask 002 \
        --uid 1000 \
        --gid 1000 \
        --daemon
    if ! mount | grep ${mnt}; then
        echo "[-] Drive not available"
        exit 1
    fi
fi

# If directory exists abort otherwise we will clobber that directory
olddir=""
newdir="${dir}/$(date -I'minutes')"
if [ -d ${newdir} ]; then
    echo "[!] It seems like the backup directory ${newdir} already exists! Exiting now..."
    exit 1
fi

# Update the list of packages explicitely installed by pacman
pacman -Qe > /home/mike/Desktop/important-docs/pacman.list

# Reuse oldest backup, update existing files
ts=$(date +%s)
for dt in ${dir}/*; do
    cur_ts=$(date -d "$(echo ${dt}| rev | cut -d'/' -f1 | rev)" +%s)
    if (( $cur_ts < $ts )); then
        ts=$cur_ts
        olddir="${dt}"
    fi
done

echo "[*] Renaming ${olddir} to ${newdir}"
mv "${olddir}" "${newdir}"

# Backup files from source to destination
for f in "${targets[@]}"; do
    rsync -azSO --partial --no-perms --no-owner --no-group --exclude="**/.git/**" --info=name,progress --delete /home/mike/${f} ${newdir}
done

echo "[*] Unmounting nextcloud drive"
umount ${mnt}
